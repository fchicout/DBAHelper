USE bossDataBase
GO

-- Show indexes ordered by fragmentation;  
  SELECT OBJECT_NAME(ps.OBJECT_ID),  
	     ps.index_id, 
		 i.name, 
		 ps.avg_fragmentation_in_percent frag
    FROM sys.dm_db_index_physical_stats(DB_ID(), NULL, NULL, NULL, NULL) AS ps INNER JOIN sys.indexes AS i 
	               ON ps.OBJECT_ID = i.object_id
ORDER BY frag DESC

SELECT DISTINCT CONCAT('ALTER INDEX ALL ON ', OBJECT_NAME(ps.OBJECT_ID), ' rebuild')
    FROM sys.dm_db_index_physical_stats(DB_ID(), NULL, NULL, NULL, NULL) AS ps INNER JOIN sys.indexes AS i 
	               ON ps.OBJECT_ID = i.object_id
 WHERE i.name IS NOT NULL

 SELECT *
    FROM sys.dm_db_index_physical_stats(DB_ID(), NULL, NULL, NULL, NULL) AS ps INNER JOIN sys.indexes AS i 
	               ON ps.OBJECT_ID = i.object_id
ORDER BY frag DESC

DBCC CHECKDB('bossDataBase')
DBCC UpdateUsage('bossDataBase')

EXECUTE master.dbo.IndexOptimize @Databases = 'USER_DATABASES',
 @FragmentationLow = NULL,
 @FragmentationMedium = 'INDEX_REORGANIZE,INDEX_REBUILD_ONLINE,INDEX_REBUILD_OFFLINE',
 @FragmentationHigh = 'INDEX_REBUILD_ONLINE,INDEX_REBUILD_OFFLINE',
 @FragmentationLevel1 = 5,
 @FragmentationLevel2 = 30,
 @SortInTempdb = 'Y',
 @MaxDOP = 0

ALTER INDEX ALL ON BA8 REORGANIZE
ALTER INDEX ALL ON BMG REORGANIZE
ALTER INDEX ALL ON BA2 REORGANIZE
ALTER INDEX ALL ON BC0 REORGANIZE
ALTER INDEX ALL ON BFB REORGANIZE
ALTER INDEX ALL ON BZS REORGANIZE
ALTER INDEX ALL ON BMR REORGANIZE
ALTER INDEX ALL ON BFR REORGANIZE
ALTER INDEX ALL ON BAF REORGANIZE
ALTER INDEX ALL ON BA0 REORGANIZE
ALTER INDEX ALL ON BF0 REORGANIZE
ALTER INDEX ALL ON BF2 REORGANIZE
ALTER INDEX ALL ON BA3 REORGANIZE
ALTER INDEX ALL ON BM9 REORGANIZE
ALTER INDEX ALL ON BA4 REORGANIZE
ALTER INDEX ALL ON BAB REORGANIZE
ALTER INDEX ALL ON BA7 REORGANIZE
ALTER INDEX ALL ON BF3 REORGANIZE
ALTER INDEX ALL ON BMH REORGANIZE
ALTER INDEX ALL ON BF1 REORGANIZE
ALTER INDEX ALL ON BAA REORGANIZE